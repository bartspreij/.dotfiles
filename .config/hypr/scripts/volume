#!/bin/bash

msgTag="myvolume"

case "$1" in
    "volume")
        # Adjust volume
        wpctl set-volume @DEFAULT_AUDIO_SINK@ "$2"

        # Get current volume for display
        volume="$(wpctl get-volume @DEFAULT_AUDIO_SINK@ | awk '{print int($2 * 100)}')"
        dunstify -a "changeVolume" -u low -t 1500 -i audio-volume-high -h string:x-dunst-stack-tag:$msgTag \
        -h int:value:"$volume" "Volume: ${volume}%"

        # Play volume change sound
        canberra-gtk-play -i audio-volume-change -d =>  "changeVolume"
        ;;

    "toggle")
        # Toggle mute and show notification
        wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
        dunstify -a "changeVolume" -u low -i audio-volume-muted -h string:x-dunst-stack-tag:$msgTag \
        "Mute toggled"
        ;;

    "playpause")
        # Toggle play/pause with playerctl
        playerctl play-pause
        dunstify -a "mediaControl" -u low -i media-playback-pause -h string:x-dunst-stack-tag:"mediacontrol" \
        "Play/Pause toggled"
        ;;

    "next")
        # Skip to the next track
        playerctl next
        dunstify -a "mediaControl" -u low -i media-skip-forward -h string:x-dunst-stack-tag:"mediacontrol" \
        "Skipped to next track"
        ;;

    "previous")
        # Skip to the previous track
        playerctl previous
        dunstify -a "mediaControl" -u low -i media-skip-backward -h string:x-dunst-stack-tag:"mediacontrol" \
        "Skipped to previous track"
        ;;

    *)
        echo "Usage: $0 {volume [value] | toggle | playpause | next | previous}"
        ;;
esac

